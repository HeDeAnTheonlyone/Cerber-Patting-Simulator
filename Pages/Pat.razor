@page "/"
@implements IDisposable

<PageTitle>Cerbert Patting Simulator</PageTitle>

<head>
    <link rel="stylesheet" href="css/pat.css">
</head>

<h1 style="margin-top: 5vh;">Pat Cerber</h1>

<div class="mouse-tracker" @onmousemove="OnMouseMove"></div>

<div @onmousemove="OnMouseMove" @onmouseenter="OnMouseEnter" @onmouseleave="OnMouseLeave">
    @if (isMoving && isInPatArea)
    {
        <img class="cerber" src="assets/media/dawg-smile.png" />
        <img class="patpat" src="assets/media/patpat.webp">
    }
    else
    {
        <img class=cerber src="assets/media/dawg.png" />
    }
</div>

@code {
    private bool isMoving = false;
    private bool isInPatArea = false;
    private bool isIdle = true;
    private Timer timer;
    private DateTime lastMouseMove;
    private TimeSpan idleThreshold = TimeSpan.FromSeconds(0.2);



    protected override void OnInitialized()
    {
        timer = new Timer(CheckIdleStatus, null, TimeSpan.FromSeconds(0), idleThreshold);
    }


    private void CheckIdleStatus(object? state)
    {
        if (DateTime.Now.Subtract(lastMouseMove) >= idleThreshold)
        {
            isIdle = true;
            isMoving = false;
        }

        InvokeAsync(StateHasChanged);
    }


    private void OnMouseMove(MouseEventArgs e)
    {
        isMoving = true;
        isIdle = false;
        lastMouseMove = DateTime.Now;
    }


    private void OnMouseEnter() => isInPatArea = true;
    private void OnMouseLeave() => isInPatArea = false;


    public void Dispose()
    {
        timer?.Dispose();
    }
}